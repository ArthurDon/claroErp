{"ast":null,"code":"import _regeneratorRuntime from \"/home/arthur.donato/Documentos/frontend/claro-erp-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/arthur.donato/Documentos/frontend/claro-erp-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { URL_BACKEND, BRAND_NAME, REQUESTER_NAME, CLIENT_ID, CLIENT_SECRET } from '../../constants';\nvar HEADERS = {\n  'Content-Type': 'application/json',\n  'X-FS-Correlation-ID': uuidv4(),\n  'X-FS-Requester-Name': REQUESTER_NAME,\n  'X-FS-Brand-Name': BRAND_NAME,\n  client_id: CLIENT_ID,\n  client_secret: CLIENT_SECRET,\n  'X-FS-Is-BFF': 'true'\n};\n/**\n * Function Send Pincode\n * @param {int} phone\n */\n\nexport function sendPincode(_x) {\n  return _sendPincode.apply(this, arguments);\n}\n/**\n * Function Validate Pincode\n * @param {int} pincode\n * @param {string} transactionId\n */\n\nfunction _sendPincode() {\n  _sendPincode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(phone) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = {\n              msisdn: phone\n            };\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.post(\"\".concat(URL_BACKEND, \"/authentication/v1/send\"), body, {\n              headers: HEADERS\n            });\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              status: true,\n              transactionId: response.data.transaction_id\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n            if (!_context.t0.response) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro.\"\n            });\n\n          case 12:\n            if (!_context.t0.request) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro.\"\n            });\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro.\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return _sendPincode.apply(this, arguments);\n}\n\nexport function validatePincode(_x2, _x3) {\n  return _validatePincode.apply(this, arguments);\n}\n\nfunction _validatePincode() {\n  _validatePincode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pincode, transactionId) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            body = {\n              pincode: pincode,\n              transaction_id: transactionId\n            };\n            _context2.prev = 1;\n            _context2.next = 4;\n            return axios.post(\"\".concat(URL_BACKEND, \"/authentication/v1/validate\"), body, {\n              headers: HEADERS\n            });\n\n          case 4:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              status: true,\n              fsAuthToken: response.data['fs-custom-token']\n            });\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n\n            if (!(_context2.t0.response.data.code === 401)) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              status: false,\n              message: 'C칩digo incorreto, verifique a mensagem enviada e tente novamente!'\n            });\n\n          case 12:\n            if (!(_context2.t0.response.data.code === 403)) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              status: false,\n              message: 'C칩digo inv치lido ou expirado, solicite um novo c칩digo e tente novamente!'\n            });\n\n          case 14:\n            if (!(_context2.t0.response.data.code === 406)) {\n              _context2.next = 16;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              status: false,\n              code: 406,\n              message: \"M\\xE1ximo de tentativas excedido.\"\n            });\n\n          case 16:\n            if (!_context2.t0.request) {\n              _context2.next = 18;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro.\"\n            });\n\n          case 18:\n            return _context2.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro.\"\n            });\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n  return _validatePincode.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/arthur.donato/Documentos/frontend/claro-erp-frontend/src/services/Authentication/index.js"],"names":["axios","v4","uuidv4","URL_BACKEND","BRAND_NAME","REQUESTER_NAME","CLIENT_ID","CLIENT_SECRET","HEADERS","client_id","client_secret","sendPincode","phone","body","msisdn","post","headers","response","status","transactionId","data","transaction_id","message","request","validatePincode","pincode","fsAuthToken","code"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  URL_BACKEND,\n  BRAND_NAME,\n  REQUESTER_NAME,\n  CLIENT_ID,\n  CLIENT_SECRET,\n} from '../../constants';\n\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  'X-FS-Correlation-ID': uuidv4(),\n  'X-FS-Requester-Name': REQUESTER_NAME,\n  'X-FS-Brand-Name': BRAND_NAME,\n  client_id: CLIENT_ID,\n  client_secret: CLIENT_SECRET,\n  'X-FS-Is-BFF': 'true',\n};\n\n/**\n * Function Send Pincode\n * @param {int} phone\n */\nexport async function sendPincode(phone) {\n  const body = {\n    msisdn: phone,\n  };\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/authentication/v1/send`,\n      body,\n      { headers: HEADERS }\n    );\n    return { status: true, transactionId: response.data.transaction_id };\n  } catch (error) {\n    if (error.response) {\n      return { status: false, message: `Ops, ocorreu um erro.` };\n    }\n\n    if (error.request) {\n      return { status: false, message: `Ops, ocorreu um erro.` };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro.` };\n  }\n}\n\n/**\n * Function Validate Pincode\n * @param {int} pincode\n * @param {string} transactionId\n */\nexport async function validatePincode(pincode, transactionId) {\n  const body = {\n    pincode,\n    transaction_id: transactionId,\n  };\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/authentication/v1/validate`,\n      body,\n      { headers: HEADERS }\n    );\n    return { status: true, fsAuthToken: response.data['fs-custom-token'] };\n  } catch (error) {\n    if (error.response.data.code === 401) {\n      return {\n        status: false,\n        message:\n          'C칩digo incorreto, verifique a mensagem enviada e tente novamente!',\n      };\n    }\n\n    if (error.response.data.code === 403) {\n      return {\n        status: false,\n        message:\n          'C칩digo inv치lido ou expirado, solicite um novo c칩digo e tente novamente!',\n      };\n    }\n\n    if (error.response.data.code === 406) {\n      return {\n        status: false,\n        code: 406,\n        message: `M치ximo de tentativas excedido.`,\n      };\n    }\n\n    if (error.request) {\n      return { status: false, message: `Ops, ocorreu um erro.` };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro.` };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}