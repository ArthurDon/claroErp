{"ast":null,"code":"import _regeneratorRuntime from \"/home/arthur.donato/Documentos/frontend/claro-erp-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/arthur.donato/Documentos/frontend/claro-erp-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { URL_FIREBASE, API_KEY_FIREBASE } from '../../constants';\nvar HEADERS = {\n  'Content-Type': 'application/json'\n};\n/**\n * Function Verify Custom Token\n * @param {json} customToken\n */\n\nexport function verifyCustomToken(_x) {\n  return _verifyCustomToken.apply(this, arguments);\n}\n\nfunction _verifyCustomToken() {\n  _verifyCustomToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(customToken) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = {\n              token: customToken,\n              returnSecureToken: true\n            };\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.post(\"\".concat(URL_FIREBASE, \"/verifyCustomToken?key=\").concat(API_KEY_FIREBASE), body, {\n              headers: HEADERS\n            });\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              status: true,\n              idToken: response.data.idToken,\n              refresh_token: response.data.refreshToken\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n            if (!_context.t0.response) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 12:\n            if (!_context.t0.request) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return _verifyCustomToken.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/arthur.donato/Documentos/frontend/claro-erp-frontend/src/services/Firebase/index.js"],"names":["axios","URL_FIREBASE","API_KEY_FIREBASE","HEADERS","verifyCustomToken","customToken","body","token","returnSecureToken","post","headers","response","status","idToken","data","refresh_token","refreshToken","message","request"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,iBAA/C;AAEA,IAAMC,OAAO,GAAG;AACd,kBAAgB;AADF,CAAhB;AAIA;AACA;AACA;AACA;;AACA,gBAAsBC,iBAAtB;AAAA;AAAA;;;gFAAO,iBAAiCC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,IADD,GACQ;AACXC,cAAAA,KAAK,EAAEF,WADI;AAEXG,cAAAA,iBAAiB,EAAE;AAFR,aADR;AAAA;AAAA;AAAA,mBAOoBR,KAAK,CAACS,IAAN,WAClBR,YADkB,oCACoBC,gBADpB,GAErBI,IAFqB,EAGrB;AAAEI,cAAAA,OAAO,EAAEP;AAAX,aAHqB,CAPpB;;AAAA;AAOGQ,YAAAA,QAPH;AAAA,6CAYI;AACLC,cAAAA,MAAM,EAAE,IADH;AAELC,cAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcD,OAFlB;AAGLE,cAAAA,aAAa,EAAEJ,QAAQ,CAACG,IAAT,CAAcE;AAHxB,aAZJ;;AAAA;AAAA;AAAA;;AAAA,iBAkBC,YAAML,QAlBP;AAAA;AAAA;AAAA;;AAAA,6CAmBM;AACLC,cAAAA,MAAM,EAAE,KADH;AAELK,cAAAA,OAAO;AAFF,aAnBN;;AAAA;AAAA,iBAyBC,YAAMC,OAzBP;AAAA;AAAA;AAAA;;AAAA,6CA0BM;AACLN,cAAAA,MAAM,EAAE,KADH;AAELK,cAAAA,OAAO;AAFF,aA1BN;;AAAA;AAAA,6CAgCI;AAAEL,cAAAA,MAAM,EAAE,KAAV;AAAiBK,cAAAA,OAAO;AAAxB,aAhCJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios';\nimport { URL_FIREBASE, API_KEY_FIREBASE } from '../../constants';\n\nconst HEADERS = {\n  'Content-Type': 'application/json',\n};\n\n/**\n * Function Verify Custom Token\n * @param {json} customToken\n */\nexport async function verifyCustomToken(customToken) {\n  const body = {\n    token: customToken,\n    returnSecureToken: true,\n  };\n\n  try {\n    const response = await axios.post(\n      `${URL_FIREBASE}/verifyCustomToken?key=${API_KEY_FIREBASE}`,\n      body,\n      { headers: HEADERS }\n    );\n    return {\n      status: true,\n      idToken: response.data.idToken,\n      refresh_token: response.data.refreshToken,\n    };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}