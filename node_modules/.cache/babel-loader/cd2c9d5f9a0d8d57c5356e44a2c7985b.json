{"ast":null,"code":"import _regeneratorRuntime from \"/home/arthur.donato/Documentos/frontend/claro-erp-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/arthur.donato/Documentos/frontend/claro-erp-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { URL_BACKEND, BRAND_NAME, REQUESTER_NAME } from '../../constants';\nimport { validateToken, enCrypto } from '../../utils';\nvar HEADERS = {\n  'Content-Type': 'application/json',\n  'X-FS-Correlation-ID': uuidv4(),\n  'X-FS-Requester-Name': REQUESTER_NAME,\n  'X-FS-Brand-Name': BRAND_NAME,\n  Authorization: \"Bearer \".concat(validateToken('token'))\n};\nvar HEADERS1 = {\n  'Content-Type': 'application/json',\n  'X-FS-Correlation-ID': uuidv4(),\n  'X-FS-Requester-Name': REQUESTER_NAME,\n  'X-FS-Brand-Name': BRAND_NAME\n};\n/**\n * Function Send Forgot Password\n * @param {string} email\n */\n\nexport function sendForgotPassword(_x) {\n  return _sendForgotPassword.apply(this, arguments);\n}\n/**\n * Function Send Check Password\n * @param {string} password\n * @param {string} email\n */\n\nfunction _sendForgotPassword() {\n  _sendForgotPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = {\n              email: email\n            };\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.post(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/forgotpassword\"), body, {\n              headers: HEADERS1\n            });\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              status: true,\n              data: response\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n            if (!_context.t0.response) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 12:\n            if (!_context.t0.request) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return _sendForgotPassword.apply(this, arguments);\n}\n\nexport function sendCheckPassword(_x2, _x3) {\n  return _sendCheckPassword.apply(this, arguments);\n}\n/**\n * Function Get Subscriptions\n */\n\nfunction _sendCheckPassword() {\n  _sendCheckPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            body = {\n              email: email,\n              password: enCrypto(password)\n            };\n            _context2.prev = 1;\n            _context2.next = 4;\n            return axios.post(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/check-password\"), body, {\n              headers: HEADERS\n            });\n\n          case 4:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              status: true,\n              customToken: response.data.custom_token\n            });\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n\n            if (!_context2.t0.response) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, voc\\xEA nao tem permiss\\xE3o para acessar. Tente novamente!\"\n            });\n\n          case 12:\n            if (!_context2.t0.request) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 14:\n            return _context2.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n  return _sendCheckPassword.apply(this, arguments);\n}\n\nexport function getSubscriptions() {\n  return _getSubscriptions.apply(this, arguments);\n}\n/**\n * Function Send Change Password\n * @param {string} hash\n * @param {string} password\n */\n\nfunction _getSubscriptions() {\n  _getSubscriptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return axios.get(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/subscriptions\"), {\n              headers: HEADERS\n            });\n\n          case 3:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", {\n              status: true,\n              data: response\n            });\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n\n            if (!_context3.t0.response) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 11:\n            if (!_context3.t0.request) {\n              _context3.next = 13;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 13:\n            return _context3.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 7]]);\n  }));\n  return _getSubscriptions.apply(this, arguments);\n}\n\nexport function sendChangePassword(_x4, _x5) {\n  return _sendChangePassword.apply(this, arguments);\n}\n/**\n * Function Send Merge Account\n * @param {string} idToken\n * @param {string} password\n * @param {int} cnpj\n * @param {string} email\n * @param {int} msisdn\n */\n\nfunction _sendChangePassword() {\n  _sendChangePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(hash, password) {\n    var body, hashUrl, header, response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            body = {\n              password: enCrypto(password)\n            };\n            hashUrl = '';\n            header = HEADERS;\n\n            if (hash) {\n              header = HEADERS1;\n              hashUrl = \"/\".concat(hash);\n            }\n\n            _context4.prev = 4;\n            _context4.next = 7;\n            return axios.post(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/changepassword\").concat(hashUrl), body, {\n              headers: header\n            });\n\n          case 7:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              status: true,\n              data: response\n            });\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](4);\n\n            if (!_context4.t0.response) {\n              _context4.next = 15;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 15:\n            if (!_context4.t0.request) {\n              _context4.next = 17;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 17:\n            return _context4.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 11]]);\n  }));\n  return _sendChangePassword.apply(this, arguments);\n}\n\nexport function sendMergeAccount(_x6, _x7, _x8, _x9, _x10) {\n  return _sendMergeAccount.apply(this, arguments);\n}\n/**\n * Function Get Merge Account\n * @param {string} hash\n */\n\nfunction _sendMergeAccount() {\n  _sendMergeAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(idToken, password, cnpj, email, msisdn) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            HEADERS1.Authorization = \"Bearer \".concat(idToken);\n            body = {\n              password: enCrypto(password),\n              cnpj: cnpj,\n              email: email,\n              msisdn: msisdn\n            };\n            _context5.prev = 2;\n            _context5.next = 5;\n            return axios.post(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/mergeAccount\"), body, {\n              headers: HEADERS1\n            });\n\n          case 5:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", {\n              status: true,\n              data: response\n            });\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](2);\n\n            if (!_context5.t0.response) {\n              _context5.next = 13;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 13:\n            if (!_context5.t0.request) {\n              _context5.next = 15;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 15:\n            return _context5.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 9]]);\n  }));\n  return _sendMergeAccount.apply(this, arguments);\n}\n\nexport function getMergeAccount(_x11) {\n  return _getMergeAccount.apply(this, arguments);\n}\n/**\n * Function Send External Token\n * @param {string} code\n */\n\nfunction _getMergeAccount() {\n  _getMergeAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(hash) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return axios.get(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/mergeAccount/\").concat(hash), {\n              headers: HEADERS\n            });\n\n          case 3:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", {\n              status: true,\n              data: response\n            });\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n\n            if (!_context6.t0.response) {\n              _context6.next = 11;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro ao ativar seu produto. Tente novamente!\"\n            });\n\n          case 11:\n            if (!_context6.t0.request) {\n              _context6.next = 13;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 13:\n            return _context6.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 7]]);\n  }));\n  return _getMergeAccount.apply(this, arguments);\n}\n\nexport function sendExternalToken(_x12) {\n  return _sendExternalToken.apply(this, arguments);\n}\n/**\n * Function Send User\n * @param {string} name\n * @param {string} email\n */\n\nfunction _sendExternalToken() {\n  _sendExternalToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(code) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            body = {\n              code: code.toString()\n            };\n            _context7.prev = 1;\n            _context7.next = 4;\n            return axios.post(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/externalToken\"), body, {\n              headers: HEADERS\n            });\n\n          case 4:\n            response = _context7.sent;\n            return _context7.abrupt(\"return\", {\n              status: true,\n              accessUrl: response.data.access_url\n            });\n\n          case 8:\n            _context7.prev = 8;\n            _context7.t0 = _context7[\"catch\"](1);\n\n            if (!_context7.t0.response) {\n              _context7.next = 12;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 12:\n            if (!_context7.t0.request) {\n              _context7.next = 14;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 14:\n            return _context7.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 8]]);\n  }));\n  return _sendExternalToken.apply(this, arguments);\n}\n\nexport function sendUser(_x13, _x14) {\n  return _sendUser.apply(this, arguments);\n}\n/**\n * Function Delete User\n * @param {string} email\n * @param {int} code\n */\n\nfunction _sendUser() {\n  _sendUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(name, email) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            body = {\n              name: name,\n              email: email\n            };\n            _context8.prev = 1;\n            _context8.next = 4;\n            return axios.post(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/user\"), body, {\n              headers: HEADERS\n            });\n\n          case 4:\n            response = _context8.sent;\n            return _context8.abrupt(\"return\", {\n              status: true,\n              data: response.data\n            });\n\n          case 8:\n            _context8.prev = 8;\n            _context8.t0 = _context8[\"catch\"](1);\n\n            if (!_context8.t0.response) {\n              _context8.next = 16;\n              break;\n            }\n\n            if (!(_context8.t0.response.status === 409)) {\n              _context8.next = 13;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, voc\\xEA atingiu o limite de cadastro de usu\\xE1rios!\"\n            });\n\n          case 13:\n            if (!(_context8.t0.response.status === 406)) {\n              _context8.next = 15;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, este e-mail j\\xE1 est\\xE1 em uso. Por favor tente outro e-mail!\"\n            });\n\n          case 15:\n            return _context8.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 16:\n            if (!_context8.t0.request) {\n              _context8.next = 18;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 18:\n            return _context8.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 8]]);\n  }));\n  return _sendUser.apply(this, arguments);\n}\n\nexport function deleteUser(_x15, _x16) {\n  return _deleteUser.apply(this, arguments);\n}\n/**\n * Function Get Plans\n */\n\nfunction _deleteUser() {\n  _deleteUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(code, email) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            body = {\n              user_code: code,\n              email: email\n            };\n            _context9.prev = 1;\n            _context9.next = 4;\n            return axios.delete(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/userDelete\"), {\n              headers: HEADERS,\n              data: body\n            });\n\n          case 4:\n            response = _context9.sent;\n            return _context9.abrupt(\"return\", {\n              status: true,\n              data: response.data\n            });\n\n          case 8:\n            _context9.prev = 8;\n            _context9.t0 = _context9[\"catch\"](1);\n\n            if (!_context9.t0.response) {\n              _context9.next = 12;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 12:\n            if (!_context9.t0.request) {\n              _context9.next = 14;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 14:\n            return _context9.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[1, 8]]);\n  }));\n  return _deleteUser.apply(this, arguments);\n}\n\nexport function getPlans() {\n  return _getPlans.apply(this, arguments);\n}\n\nfunction _getPlans() {\n  _getPlans = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return axios.get(\"\".concat(URL_BACKEND, \"/bff/api/v2/erp/subscriptions?partner=egestor\"), {\n              headers: HEADERS\n            });\n\n          case 3:\n            response = _context10.sent;\n            return _context10.abrupt(\"return\", {\n              status: true,\n              subscriptions: response.data.subscriptions,\n              user: {\n                phone: response.data.user.phone !== null ? response.data.user.phone.toString() : '',\n                email: response.data.user.email,\n                name: response.data.user.name\n              }\n            });\n\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](0);\n\n            if (!_context10.t0.response) {\n              _context10.next = 11;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro.\"\n            });\n\n          case 11:\n            if (!_context10.t0.request) {\n              _context10.next = 13;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro.\"\n            });\n\n          case 13:\n            return _context10.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro.\"\n            });\n\n          case 14:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 7]]);\n  }));\n  return _getPlans.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/arthur.donato/Documentos/frontend/claro-erp-frontend/src/services/BFF/index.js"],"names":["axios","v4","uuidv4","URL_BACKEND","BRAND_NAME","REQUESTER_NAME","validateToken","enCrypto","HEADERS","Authorization","HEADERS1","sendForgotPassword","email","body","post","headers","response","status","data","message","request","sendCheckPassword","password","customToken","custom_token","getSubscriptions","get","sendChangePassword","hash","hashUrl","header","sendMergeAccount","idToken","cnpj","msisdn","getMergeAccount","sendExternalToken","code","toString","accessUrl","access_url","sendUser","name","deleteUser","user_code","delete","getPlans","subscriptions","user","phone"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { URL_BACKEND, BRAND_NAME, REQUESTER_NAME } from '../../constants';\n\nimport { validateToken, enCrypto } from '../../utils';\n\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  'X-FS-Correlation-ID': uuidv4(),\n  'X-FS-Requester-Name': REQUESTER_NAME,\n  'X-FS-Brand-Name': BRAND_NAME,\n  Authorization: `Bearer ${validateToken('token')}`,\n};\n\nconst HEADERS1 = {\n  'Content-Type': 'application/json',\n  'X-FS-Correlation-ID': uuidv4(),\n  'X-FS-Requester-Name': REQUESTER_NAME,\n  'X-FS-Brand-Name': BRAND_NAME,\n};\n\n/**\n * Function Send Forgot Password\n * @param {string} email\n */\nexport async function sendForgotPassword(email) {\n  const body = { email };\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/bff/api/v2/erp/forgotpassword`,\n      body,\n      { headers: HEADERS1 }\n    );\n    return { status: true, data: response };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Send Check Password\n * @param {string} password\n * @param {string} email\n */\nexport async function sendCheckPassword(email, password) {\n  const body = {\n    email,\n    password: enCrypto(password),\n  };\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/bff/api/v2/erp/check-password`,\n      body,\n      { headers: HEADERS }\n    );\n    return { status: true, customToken: response.data.custom_token };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, você nao tem permissão para acessar. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Get Subscriptions\n */\nexport async function getSubscriptions() {\n  try {\n    const response = await axios.get(\n      `${URL_BACKEND}/bff/api/v2/erp/subscriptions`,\n      { headers: HEADERS }\n    );\n    return { status: true, data: response };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Send Change Password\n * @param {string} hash\n * @param {string} password\n */\nexport async function sendChangePassword(hash, password) {\n  const body = {\n    password: enCrypto(password),\n  };\n\n  let hashUrl = '';\n  let header = HEADERS;\n\n  if (hash) {\n    header = HEADERS1;\n    hashUrl = `/${hash}`;\n  }\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/bff/api/v2/erp/changepassword${hashUrl}`,\n      body,\n      { headers: header }\n    );\n    return { status: true, data: response };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Send Merge Account\n * @param {string} idToken\n * @param {string} password\n * @param {int} cnpj\n * @param {string} email\n * @param {int} msisdn\n */\nexport async function sendMergeAccount(idToken, password, cnpj, email, msisdn) {\n  HEADERS1.Authorization = `Bearer ${idToken}`;\n\n  const body = {\n    password: enCrypto(password),\n    cnpj,\n    email,\n    msisdn,\n  };\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/bff/api/v2/erp/mergeAccount`,\n      body,\n      { headers: HEADERS1 }\n    );\n    return { status: true, data: response };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Get Merge Account\n * @param {string} hash\n */\nexport async function getMergeAccount(hash) {\n  try {\n    const response = await axios.get(\n      `${URL_BACKEND}/bff/api/v2/erp/mergeAccount/${hash}`,\n      { headers: HEADERS }\n    );\n    return { status: true, data: response };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro ao ativar seu produto. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Send External Token\n * @param {string} code\n */\nexport async function sendExternalToken(code) {\n  const body = {\n    code: code.toString(),\n  };\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/bff/api/v2/erp/externalToken`,\n      body,\n      { headers: HEADERS }\n    );\n    return { status: true, accessUrl: response.data.access_url };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Send User\n * @param {string} name\n * @param {string} email\n */\nexport async function sendUser(name, email) {\n  const body = {\n    name,\n    email,\n  };\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/bff/api/v2/erp/user`,\n      body,\n      { headers: HEADERS }\n    );\n    return { status: true, data: response.data };\n  } catch (error) {\n    if (error.response) {\n      if (error.response.status === 409) {\n        return {\n          status: false,\n          message: `Ops, você atingiu o limite de cadastro de usuários!`,\n        };\n      }\n\n      if (error.response.status === 406) {\n        return {\n          status: false,\n          message: `Ops, este e-mail já está em uso. Por favor tente outro e-mail!`,\n        };\n      }\n\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Delete User\n * @param {string} email\n * @param {int} code\n */\nexport async function deleteUser(code, email) {\n  const body = {\n    user_code: code,\n    email,\n  };\n\n  try {\n    const response = await axios.delete(\n      `${URL_BACKEND}/bff/api/v2/erp/userDelete`,\n      {\n        headers: HEADERS,\n        data: body,\n      }\n    );\n    return { status: true, data: response.data };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n/**\n * Function Get Plans\n */\nexport async function getPlans() {\n  try {\n    const response = await axios.get(\n      `${URL_BACKEND}/bff/api/v2/erp/subscriptions?partner=egestor`,\n      { headers: HEADERS }\n    );\n\n    return {\n      status: true,\n      subscriptions: response.data.subscriptions,\n      user: {\n        phone:\n          response.data.user.phone !== null\n            ? response.data.user.phone.toString()\n            : '',\n        email: response.data.user.email,\n        name: response.data.user.name,\n      },\n    };\n  } catch (error) {\n    if (error.response) {\n      return { status: false, message: `Ops, ocorreu um erro.` };\n    }\n\n    if (error.request) {\n      return { status: false, message: `Ops, ocorreu um erro.` };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro.` };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}