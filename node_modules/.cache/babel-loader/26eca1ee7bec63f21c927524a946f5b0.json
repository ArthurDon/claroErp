{"ast":null,"code":"import _regeneratorRuntime from \"/home/arthur.donato/Documentos/frontend/claro-erp-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/arthur.donato/Documentos/frontend/claro-erp-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { URL_BACKEND, BRAND_NAME, REQUESTER_NAME, CLIENT_ID, CLIENT_SECRET } from '../../constants';\nvar HEADERS = {\n  'Content-Type': 'application/json',\n  'X-FS-Correlation-ID': uuidv4(),\n  'X-FS-Requester-Name': REQUESTER_NAME,\n  'X-FS-Brand-Name': BRAND_NAME,\n  client_id: CLIENT_ID,\n  client_secret: CLIENT_SECRET,\n  'X-FS-Is-BFF': 'true'\n};\n/**\n * Function Authorize FS Auth Token\n * @param {json} fsAuthToken\n */\n\nexport function authorization(_x) {\n  return _authorization.apply(this, arguments);\n}\n\nfunction _authorization() {\n  _authorization = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fsAuthToken) {\n    var body, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = {\n              'fs-auth-token': fsAuthToken\n            };\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.post(\"\".concat(URL_BACKEND, \"/authorization/api/v1/authorize\"), body, {\n              headers: HEADERS\n            });\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              status: true,\n              customToken: response.data.authorization.custom_token\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n            if (!(_context.t0.response.status === 404)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 12:\n            if (!_context.t0.request) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              status: false,\n              message: \"Ops, ocorreu um erro. Tente novamente!\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return _authorization.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/arthur.donato/Documentos/frontend/claro-erp-frontend/src/services/Authorization/index.js"],"names":["axios","v4","uuidv4","URL_BACKEND","BRAND_NAME","REQUESTER_NAME","CLIENT_ID","CLIENT_SECRET","HEADERS","client_id","client_secret","authorization","fsAuthToken","body","post","headers","response","status","customToken","data","custom_token","message","request"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,SACEC,WADF,EAEEC,UAFF,EAGEC,cAHF,EAIEC,SAJF,EAKEC,aALF,QAMO,iBANP;AAQA,IAAMC,OAAO,GAAG;AACd,kBAAgB,kBADF;AAEd,yBAAuBN,MAAM,EAFf;AAGd,yBAAuBG,cAHT;AAId,qBAAmBD,UAJL;AAKdK,EAAAA,SAAS,EAAEH,SALG;AAMdI,EAAAA,aAAa,EAAEH,aAND;AAOd,iBAAe;AAPD,CAAhB;AAUA;AACA;AACA;AACA;;AACA,gBAAsBI,aAAtB;AAAA;AAAA;;;4EAAO,iBAA6BC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,IADD,GACQ;AACX,+BAAiBD;AADN,aADR;AAAA;AAAA;AAAA,mBAMoBZ,KAAK,CAACc,IAAN,WAClBX,WADkB,sCAErBU,IAFqB,EAGrB;AAAEE,cAAAA,OAAO,EAAEP;AAAX,aAHqB,CANpB;;AAAA;AAMGQ,YAAAA,QANH;AAAA,6CAWI;AACLC,cAAAA,MAAM,EAAE,IADH;AAELC,cAAAA,WAAW,EAAEF,QAAQ,CAACG,IAAT,CAAcR,aAAd,CAA4BS;AAFpC,aAXJ;;AAAA;AAAA;AAAA;;AAAA,kBAgBC,YAAMJ,QAAN,CAAeC,MAAf,KAA0B,GAhB3B;AAAA;AAAA;AAAA;;AAAA,6CAiBM;AACLA,cAAAA,MAAM,EAAE,KADH;AAELI,cAAAA,OAAO;AAFF,aAjBN;;AAAA;AAAA,iBAuBC,YAAMC,OAvBP;AAAA;AAAA;AAAA;;AAAA,6CAwBM;AACLL,cAAAA,MAAM,EAAE,KADH;AAELI,cAAAA,OAAO;AAFF,aAxBN;;AAAA;AAAA,6CA8BI;AAAEJ,cAAAA,MAAM,EAAE,KAAV;AAAiBI,cAAAA,OAAO;AAAxB,aA9BJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  URL_BACKEND,\n  BRAND_NAME,\n  REQUESTER_NAME,\n  CLIENT_ID,\n  CLIENT_SECRET,\n} from '../../constants';\n\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  'X-FS-Correlation-ID': uuidv4(),\n  'X-FS-Requester-Name': REQUESTER_NAME,\n  'X-FS-Brand-Name': BRAND_NAME,\n  client_id: CLIENT_ID,\n  client_secret: CLIENT_SECRET,\n  'X-FS-Is-BFF': 'true',\n};\n\n/**\n * Function Authorize FS Auth Token\n * @param {json} fsAuthToken\n */\nexport async function authorization(fsAuthToken) {\n  const body = {\n    'fs-auth-token': fsAuthToken,\n  };\n\n  try {\n    const response = await axios.post(\n      `${URL_BACKEND}/authorization/api/v1/authorize`,\n      body,\n      { headers: HEADERS }\n    );\n    return {\n      status: true,\n      customToken: response.data.authorization.custom_token,\n    };\n  } catch (error) {\n    if (error.response.status === 404) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}