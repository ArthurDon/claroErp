{"ast":null,"code":"/**\n * Function Validator Phone Numer\n * @param {int} phone\n */\nexport function validatorPhoneNumber(value) {\n  var phone = value.replace(/[^0-9]+/g, '');\n\n  if (phone.length < 11) {\n    return {\n      status: false,\n      message: 'Por favor, digite um numero de celular válido!'\n    };\n  }\n\n  if (['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10'].indexOf(phone.substring(0, 2)) !== -1) {\n    return {\n      status: false,\n      message: 'Por favor, digite um numero de celular válido!'\n    };\n  }\n\n  if (['6', '7', '8', '9'].indexOf(phone.substring(2, 3)) === -1) {\n    return {\n      status: false,\n      message: 'Por favor, digite um numero de celular válido!'\n    };\n  }\n\n  return {\n    status: true,\n    phone: \"55\".concat(phone)\n  };\n}","map":{"version":3,"sources":["/home/arthur.donato/Documentos/frontend/claro-erp-frontend/src/utils/Validator/PhoneNumber/index.js"],"names":["validatorPhoneNumber","value","phone","replace","length","status","message","indexOf","substring"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,MAAMC,KAAK,GAAGD,KAAK,CAACE,OAAN,CAAc,UAAd,EAA0B,EAA1B,CAAd;;AAEA,MAAID,KAAK,CAACE,MAAN,GAAe,EAAnB,EAAuB;AACrB,WAAO;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AAED,MACE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmEC,OAAnE,CACEL,KAAK,CAACM,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CADF,MAEM,CAAC,CAHT,EAIE;AACA,WAAO;AACLH,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AAED,MAAI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBC,OAArB,CAA6BL,KAAK,CAACM,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAA7B,MAAwD,CAAC,CAA7D,EAAgE;AAC9D,WAAO;AACLH,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AAED,SAAO;AAAED,IAAAA,MAAM,EAAE,IAAV;AAAgBH,IAAAA,KAAK,cAAOA,KAAP;AAArB,GAAP;AACD","sourcesContent":["/**\n * Function Validator Phone Numer\n * @param {int} phone\n */\nexport function validatorPhoneNumber(value) {\n  const phone = value.replace(/[^0-9]+/g, '');\n\n  if (phone.length < 11) {\n    return {\n      status: false,\n      message: 'Por favor, digite um numero de celular válido!',\n    };\n  }\n\n  if (\n    ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10'].indexOf(\n      phone.substring(0, 2)\n    ) !== -1\n  ) {\n    return {\n      status: false,\n      message: 'Por favor, digite um numero de celular válido!',\n    };\n  }\n\n  if (['6', '7', '8', '9'].indexOf(phone.substring(2, 3)) === -1) {\n    return {\n      status: false,\n      message: 'Por favor, digite um numero de celular válido!',\n    };\n  }\n\n  return { status: true, phone: `55${phone}` };\n}\n"]},"metadata":{},"sourceType":"module"}